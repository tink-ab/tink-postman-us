{
	"info": {
		"_postman_id": "85913482-9128-4d96-94c8-b551e42de0f2",
		"name": "Balance Refresh",
		"description": "Welcome to Tink’s Postman collection for Balance Check.\n\nFor detailed information on how to use Balance Check, visit the Balance Check Integration Guide(https://docs.tink.com/resources/balance-check-us/accounts-and-balance-integration-guide).\n\nThe documentation in this Postman collection shows how you get your Tink variables and enter them in Postman to be able to use this collection.\n\nMake sure that you have created your Tink Console account. This is where you find your API credentials, for example `client_id` and `client_secret`, and create and manage your apps. If you haven't created a Console account and an app, go to Set up your Tink Console account(https://docs.tink.com/resources/console/set-up-your-tink-account) and follow the instructions to set up an account and create your first app.\n\nIn Postman, click on the environments tab on the far left and ensure you imported the pre-set environment. Once the Balance Check Staging or Production environment has been imported, you should see all of the different variables.\n\nTo begin, enter your variables in the **CURRENT VALUE** column:\nEnter the `client_id` and `client_secret` values from your Console app.\nTo change the default redirect page value, change the redirect_uri value.\nThen you are ready to go!\n\nBelow is a Quick Start for this Postman Collection:\n1.1 Click through\n1.2 Click through\n2.1 Click through and then within the response \"Body\" section, click \"Visualize\". Copy the Tink Link URL that was generated here and paste it into your browser. You can then move through the Tink Link Flow like a user would. At the end, you will receive a \"reportId\", you can copy this reportId and place it into your environment under the \"reportId\" variable.\n2.2 Click through\n2.3 Click through and within the response \"Body\" section, you will see the Account Check Report Data. This houses the masked accountId that will be used to show the Balance Check Report. The Account Check Report is only valid for 60 minutes.\n3.1 Click through\n3.2 Click through\n3.3 Click through\n3.4 Click through - this step kicks off the Balance Refresh process to \"refresh\" the balance in the balance check report\n3.5 Continue clicking until you see any other status other than \"refreshing\". If you see that the balance has finished refreshing, you will see the status of \"finished\".\n3.6 Click through and within the response \"Body\" section, you will see the Balance Check Report Data.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setting up Continuous Access",
			"item": [
				{
					"name": "1.1 Authorize app",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"accessToken\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "Client Id is the unique ID for your app",
									"type": "default"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"description": "Client Secret is the unique secret for you client",
									"type": "default"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "default"
								},
								{
									"key": "scope",
									"value": "user:create,authorization:grant,link-session:write",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{base}}api/v1/oauth/token",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						},
						"description": "Welcome to Tink’s Postman collection for Account Check.\n\nFor detailed information on how to use Account Check, visit [Fetch your first Account Check report](https://docs.tink.com/resources/account-check/verify-your-first-account).\n\nThe documentation in this Postman collection shows how you get your Tink variables and enter them in Postman to be able to use this collection.\n\nMake sure that you have created your Tink Console account. This is where you find your API credentials, for example `client_id` and `client_secret`, and create and manage your apps. If you haven't created a Console account and an app, go to [Set up your Tink Console account](https://docs.tink.com/resources/landing/set-up-your-tink-account) and follow the instructions to set up an account and create your first app.\n\nIn Postman, go to the **Variables** tab, which should be the one with a green dot next to it. This tab contains four variables. The rest of this documentation shows how to retrieve these values.\n\nMake sure that you enter all of your variables in the **CURRENT VALUE** column.\n\nEnter the `client_id` and `client_secret` values from your Console app.\n\nTo get the `report_id` value, you must build a Tink Link URL. To do this, open Console and go to **Account Check** > **Tink Link**, and create your own Tink Link. These steps are required for providing consent to a financial institution, so that Tink can connect and retrieve account data. At the bottom of the page, select **Preview** and follow all steps on the Tink Link page that opens in a new window. At the end of a successful authorization flow, the **Account Check successful** page displays your `account_verification_report_id`. Copy this code, go to Postman, and paste it into the variables field for `report_id`.\n\nMake sure that all of your variables are entered into the **CURRENT VALUE** column. Select **Save** (or Ctrl+S).\n\nWhen you've entered all your variables except for `access_token`, run the **POST** command to exchange your `code` for an `access_token`. The value for `access_token` is automatically entered into your list of variables.\n\nConfirm that your `access_token` has been added to your list of variables. Use your `access_token` any number of times to run the **GET** commands to fetch a report."
					},
					"response": []
				},
				{
					"name": "1.2 Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"userId\", jsonData.user_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"external_user_id\": null,\n  \"market\": \"US\", \n  \"locale\": \"en_US\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}api/v1/user/create",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"user",
								"create"
							]
						},
						"description": "Create User API endpoint call with a way to identify the user and the market."
					},
					"response": []
				}
			]
		},
		{
			"name": "Generate the Reports",
			"item": [
				{
					"name": "2.1 Generate Authorization Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonResponse = JSON.parse(responseBody);",
									"",
									"let clientId = pm.environment.get(\"client_id\");",
									"let tinkLinkmarket = pm.environment.get(\"market\")",
									"let tinkLinklocale = pm.environment.get(\"locale\")",
									"let redirectUri = pm.environment.get(\"redirect_uri\");",
									"let tinkLinkURL = pm.environment.get(\"tink_link_url\");",
									"",
									"//Set code in variables",
									"let code = jsonResponse[\"code\"];",
									"pm.environment.set(\"code\", code);",
									"",
									"//Encode redirect URI",
									"let redirectUriEncoded = encodeURIComponent(redirectUri);",
									"",
									"//Compose TinkLink URI",
									"let tinkLink = \"tink_link_url/1.0/account-check/connect?client_id=YOUR_CLIENT_ID&redirect_uri=REDIRECT_URL&authorization_code=USER_AUTHORIZATION_CODE&market=MARKET&locale=LOCALE\"",
									"tinkLink = tinkLink.replace(\"YOUR_CLIENT_ID\", clientId);",
									"tinkLink = tinkLink.replace(\"USER_AUTHORIZATION_CODE\", code);",
									"tinkLink = tinkLink.replace(\"REDIRECT_URL\", redirectUriEncoded);",
									"tinkLink = tinkLink.replace(\"MARKET\", tinkLinkmarket);",
									"tinkLink = tinkLink.replace(\"LOCALE\", tinkLinklocale);",
									"tinkLink = tinkLink.replace(\"tink_link_url\",tinkLinkURL);",
									"",
									"pm.environment.set(\"tink_link\", tinkLink);",
									"",
									"//Set html template for Postman Visualize",
									"let postmanVisualise = `",
									"<html>",
									"<head>",
									"    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js\"></script>",
									"    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.11/clipboard.min.js\"></script>",
									"</head>",
									"<body>",
									"    <div>",
									"    <div>",
									"        <pre><code style=\"width:max-content;\" id=\"tinkLink\">${tinkLink}</code></pre>",
									"    </div>",
									"    <button class=\"copyButton\" type=\"button\" data-clipboard-action=\"copy\" data-clipboard-target=\"#tinkLink\" style=\"background:#062A2E;color:white;border-radius:25px\">COPY TINKLINK TO YOUR CLIPBOARD</button>",
									"    </div>",
									"</body>",
									"</html>",
									"<script>",
									"    var clipboard = new ClipboardJS('.copyButton');",
									"",
									"    clipboard.on('success', function(tl) {",
									"        tl.clearSelection()",
									"        tl.trigger.textContent = 'TINKLINK COPIED TO YOUR CLIPBOARD';",
									"        window.setTimeout(function() {",
									"            tl.trigger.textContent = 'COPY TINKLINK TO YOUR CLIPBOARD';",
									"        }, 2500);",
									"    });",
									"",
									"    clipboard.on('error', function(tl) {",
									"        tl.clearSelection()",
									"        tl.trigger.textContent = 'ISSUE WITH COPYING TINKLINK';",
									"        window.setTimeout(function() {",
									"            tl.trigger.textContent = 'COPY TINKLINK TO YOUR CLIPBOARD';",
									"        }, 2500);",
									"    });",
									"</script>`",
									"",
									"//Set the html template to Postamen Visualizer",
									"pm.visualizer.set(postmanVisualise, pm.response.json());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "actor_client_id",
									"value": "df05e4b379934cd09963197cc855bfe9",
									"description": "This value never changes and is used by Tink to identify apps. Once you declare the value, you allow Tink to act on your behalf.",
									"type": "text"
								},
								{
									"key": "user_id",
									"value": "{{userId}}",
									"description": "You can use the user_id or the external_user_id ",
									"type": "text"
								},
								{
									"key": "id_hint",
									"value": "null",
									"description": "The id_hint is a value that has main applicability in the EU, we recommend to set it to null.",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "authorization:read,authorization:grant,credentials:read,providers:read,user:read,accounts:read,accounts.balances:readonly,balance-refresh,balance-refresh:readonly,credentials:refresh,credentials:write,link-session:read",
									"type": "text"
								},
								{
									"key": "external_user_id",
									"value": "",
									"description": "You can use the user_id or the external_user_id ",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base}}api/v1/oauth/authorization-grant/delegate",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"oauth",
								"authorization-grant",
								"delegate"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2 Get Token to Retrieve Account Verification Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"accessToken\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "Client Id is the unique ID for your app",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"description": "Client Secret is the unique secret for you client",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "account-verification-reports:read,accounts:read,balance-refresh,balance-refresh:readonly,accounts.balances:readonly",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base}}api/v1/oauth/token",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3. Get the Account Check report as JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json();",
									"let value = body.userDataByProvider[0].accounts[0].id;",
									"pm.environment.set(\"accountId\", value);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base}}api/v1/account-verification-reports/{{reportId}}",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"account-verification-reports",
								"{{reportId}}"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Refresh and Fetch Balance Data",
			"item": [
				{
					"name": "3.5 Call the Balance Refresh API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test('status should be equal to finished', function() {",
									"    pm.expect(response.status).to.equal('finished');",
									"});",
									"",
									"if (response.status === 'refreshing') {",
									"    postman.setNextRequest('mock delay');",
									"} else if (response.status === 'finished') {",
									"    postman.setNextRequest(null);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "balanceRefreshId",
									"value": "{{balanceRefreshId}}",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base}}api/v1/balance-refresh/{{balanceRefreshId}}",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"balance-refresh",
								"{{balanceRefreshId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.3 Generate User token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"accessToken\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{code}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base}}api/v1/oauth/token",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.2 Generate refresh authorization code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"code\", jsonData.code);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "{{userId}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "accounts.balances:readonly,accounts:read,credentials:read,balance-refresh,balance-refresh:readonly,",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base}}api/v1/oauth/authorization-grant",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"oauth",
								"authorization-grant"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.1 Authorize your app",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"accessToken\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"description": "Client Id is the unique ID for your app",
									"type": "default"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"description": "Client Secret is the unique secret for you client",
									"type": "default"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "default"
								},
								{
									"key": "scope",
									"value": "authorization:grant",
									"type": "default"
								}
							]
						},
						"url": {
							"raw": "{{base}}api/v1/oauth/token",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"oauth",
								"token"
							]
						},
						"description": "Welcome to Tink’s Postman collection for Account Check.\n\nFor detailed information on how to use Account Check, visit [Fetch your first Account Check report](https://docs.tink.com/resources/account-check/verify-your-first-account).\n\nThe documentation in this Postman collection shows how you get your Tink variables and enter them in Postman to be able to use this collection.\n\nMake sure that you have created your Tink Console account. This is where you find your API credentials, for example `client_id` and `client_secret`, and create and manage your apps. If you haven't created a Console account and an app, go to [Set up your Tink Console account](https://docs.tink.com/resources/landing/set-up-your-tink-account) and follow the instructions to set up an account and create your first app.\n\nIn Postman, go to the **Variables** tab, which should be the one with a green dot next to it. This tab contains four variables. The rest of this documentation shows how to retrieve these values.\n\nMake sure that you enter all of your variables in the **CURRENT VALUE** column.\n\nEnter the `client_id` and `client_secret` values from your Console app.\n\nTo get the `report_id` value, you must build a Tink Link URL. To do this, open Console and go to **Account Check** > **Tink Link**, and create your own Tink Link. These steps are required for providing consent to a financial institution, so that Tink can connect and retrieve account data. At the bottom of the page, select **Preview** and follow all steps on the Tink Link page that opens in a new window. At the end of a successful authorization flow, the **Account Check successful** page displays your `account_verification_report_id`. Copy this code, go to Postman, and paste it into the variables field for `report_id`.\n\nMake sure that all of your variables are entered into the **CURRENT VALUE** column. Select **Save** (or Ctrl+S).\n\nWhen you've entered all your variables except for `access_token`, run the **POST** command to exchange your `code` for an `access_token`. The value for `access_token` is automatically entered into your list of variables.\n\nConfirm that your `access_token` has been added to your list of variables. Use your `access_token` any number of times to run the **GET** commands to fetch a report."
					},
					"response": []
				},
				{
					"name": "3.4 Create Balance Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"balanceRefreshId\", jsonData.balanceRefreshId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountId\":\"{{accountId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}api/v1/balance-refresh",
							"host": [
								"{{base}}api"
							],
							"path": [
								"v1",
								"balance-refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.6 Fetch the refreshed balance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base}}data/v2/accounts/{{accountId}}/balances",
							"host": [
								"{{base}}data"
							],
							"path": [
								"v2",
								"accounts",
								"{{accountId}}",
								"balances"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"  pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	]
}